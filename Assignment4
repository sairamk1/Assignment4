#1.1 Write a Python Program(with class concepts) to find the area of the triangle using the below
#formula.
#area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
#Function to take the length of the sides of triangle from user should be defined in the parent
#class and function to calculate the area should be defined in subclass.
class Triangle:
 
    def __init__(self,a,b,c):
        self.a = float(a)
        self.b = float(b)
        self.c = float(c)
 
    def area(self):
        s=(self.a + self.b + self.c)/2
        return((s*(s-self.a)*(s-self.b)*(s-self.c))**0.5)
 
a=input("Enter the value of a = ")
b=input("Enter the value of b = ")
c=input("Enter the value of c = ")
t = Triangle(a, b, c)
print("area : {}".format(t.area()))

OutPUT
Enter the value of a = 12
Enter the value of b = 12
Enter the value of c = 12
area : 62.353829072479584

#1.2 Write a function filter_long_words() that takes a list of words and an integer n and returns
#the list of words that are longer than n.

def longwords(wordlist, length):
    return (word for word in wordlist if len(word) >= length)

def main():
    words = input("Enter words, separated by spaces: ").split()
    length = int(input("Minimum length of words to keep: "))
    print("Words longer than {} are {}.".format(length,
          ', '.join(longwords(words, length))))

main()

OutPUT
Enter words, separated by spaces: kishan sai ram
Minimum length of words to keep: 4
Words longer than 4 are kishan.

#2. Write a Python program using function concept that maps list of words into a list of integers representing the lengths
#of the corresponding words.
#Hint:?If a list [ ab,cde,erty] is passed on to the python function output should come as [2,3,4]
#Here 2,3 and 4 are the lengths of the words in the list.

listOfWords = ['wordOne','wordTwo','wordThree','wordFour','wordFive']
 
listOfInts = []
 
for i in range(len(listOfWords)):
    listOfInts.append(len(listOfWords[i]))
 
print ("List of words:"+str(listOfWords))    
print ("List of wordlength:"+str(listOfInts))

OUTPUT
List of words:['wordOne', 'wordTwo', 'wordThree', 'wordFour', 'wordFive']
List of wordlength:[7, 7, 9, 8, 8]

#2.2 Write a Python function which takes a character (i.e. a string of length 1) and returns True if
#it is a vowel, False otherwise.
def is_vowel(char):
    vowels = ('a', 'e', 'i', 'o', 'u')
    if char not in vowels:
        return False
    return True


if __name__ == "__main__":
    print is_vowel(1)
    print is_vowel('a')
    print is_vowel('b')

OUTPUT
True
